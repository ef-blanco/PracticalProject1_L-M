//
//  Implements JavaCC parser for simple s-expressions (sums and products)
//





options {
  IGNORE_CASE = true;
  STATIC = false;
}
PARSER_BEGIN(S_ExpParser)
package uniandes.lym.parserJavaCC.sExpParser;

import java.util.*;
 
public class S_ExpParser {
} 
 
PARSER_END(S_ExpParser)

SKIP :
{
 	" " | "\r" | "\t" | "\n"
}
 

TOKEN :
{
     < #DIGIT: "0" | "1" | "2"| "3" | "4" | "5" |  "6" | "7" | "8" |"9" >
|   < #LETTER: ["A"-"Z"] >
|    < NAME: ( <LETTER>  ( <LETTER > | < DIGIT >)* )>
|    < NUM: (  < DIGIT >)+ >


}



void sExp():
{}
{
< NUM >
|  "(" ( "+"   (sExp())* ")"
|     "*"   (sExp())* ")")
}



